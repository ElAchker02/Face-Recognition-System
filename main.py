# Form implementation generated from reading ui file '.\uis\main.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import sys
from PyQt6.QtWidgets import QMainWindow, QApplication, QLabel, QListWidgetItem,QWidget, QGridLayout
from PyQt6.QtCore import Qt, QSize
from PyQt6.QtGui import QIcon, QPixmap, QFont
from PyQt6.QtCore import QPropertyAnimation


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1078, 719)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.title_frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.title_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.title_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.title_frame.setObjectName("title_frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.title_frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.title = QtWidgets.QLabel(parent=self.title_frame)
        self.title.setObjectName("title")
        self.horizontalLayout.addWidget(self.title)
        self.title2 = QtWidgets.QLabel(parent=self.title_frame)
        self.title2.setObjectName("title2")
        self.horizontalLayout.addWidget(self.title2)
        self.pushButton = QtWidgets.QPushButton(parent=self.title_frame)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.gridLayout.addWidget(self.title_frame, 0, 0, 1, 2)
        self.listWidget_icon = QtWidgets.QListWidget(parent=self.centralwidget)
        self.listWidget_icon.setMaximumSize(QtCore.QSize(50, 16777215))
        self.listWidget_icon.setObjectName("listWidget_icon")
        self.gridLayout.addWidget(self.listWidget_icon, 1, 0, 1, 1)
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.dashboard_page = QtWidgets.QWidget()
        self.dashboard_page.setObjectName("dashboard_page")
        self.label = QtWidgets.QLabel(parent=self.dashboard_page)
        self.label.setGeometry(QtCore.QRect(460, 190, 161, 20))
        self.label.setObjectName("label")
        self.stackedWidget.addWidget(self.dashboard_page)
        self.Users_page = QtWidgets.QWidget()
        self.Users_page.setObjectName("Users_page")
        self.label_2 = QtWidgets.QLabel(parent=self.Users_page)
        self.label_2.setGeometry(QtCore.QRect(310, 210, 111, 16))
        self.label_2.setObjectName("label_2")
        self.stackedWidget.addWidget(self.Users_page)
        self.logs_page = QtWidgets.QWidget()
        self.logs_page.setObjectName("logs_page")
        self.label_3 = QtWidgets.QLabel(parent=self.logs_page)
        self.label_3.setGeometry(QtCore.QRect(340, 230, 111, 16))
        self.label_3.setObjectName("label_3")
        self.stackedWidget.addWidget(self.logs_page)
        self.departements_page = QtWidgets.QWidget()
        self.departements_page.setObjectName("departements_page")
        self.label_6 = QtWidgets.QLabel(parent=self.departements_page)
        self.label_6.setGeometry(QtCore.QRect(290, 80, 131, 16))
        self.label_6.setObjectName("label_6")
        self.stackedWidget.addWidget(self.departements_page)
        self.admins_page = QtWidgets.QWidget()
        self.admins_page.setObjectName("admins_page")
        self.label_5 = QtWidgets.QLabel(parent=self.admins_page)
        self.label_5.setGeometry(QtCore.QRect(320, 160, 55, 16))
        self.label_5.setObjectName("label_5")
        self.stackedWidget.addWidget(self.admins_page)
        self.settings_page = QtWidgets.QWidget()
        self.settings_page.setObjectName("settings_page")
        self.label_4 = QtWidgets.QLabel(parent=self.settings_page)
        self.label_4.setGeometry(QtCore.QRect(300, 120, 55, 16))
        self.label_4.setObjectName("label_4")
        self.stackedWidget.addWidget(self.settings_page)
        self.gridLayout.addWidget(self.stackedWidget, 1, 4, 1, 1)
        self.listWidget = QtWidgets.QListWidget(parent=self.centralwidget)
        self.listWidget.setMaximumSize(QtCore.QSize(200, 16777215))
        self.listWidget.setObjectName("listWidget")
        self.gridLayout.addWidget(self.listWidget, 1, 1, 1, 1)
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.admin = QtWidgets.QLabel(parent=self.frame_2)
        self.admin.setObjectName("admin")
        self.horizontalLayout_2.addWidget(self.admin)
        self.timestamps = QtWidgets.QLabel(parent=self.frame_2)
        self.timestamps.setObjectName("timestamps")
        self.horizontalLayout_2.addWidget(self.timestamps)
        self.gridLayout.addWidget(self.frame_2, 0, 2, 1, 3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1078, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.title.setText(_translate("MainWindow", "TextLabel"))
        self.title2.setText(_translate("MainWindow", "TextLabel"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))
        self.label.setText(_translate("MainWindow", "dashboard"))
        self.label_2.setText(_translate("MainWindow", "Users Page"))
        self.label_3.setText(_translate("MainWindow", "Logs Page"))
        self.label_6.setText(_translate("MainWindow", "departements"))
        self.label_5.setText(_translate("MainWindow", "admins"))
        self.label_4.setText(_translate("MainWindow", "settings"))
        self.admin.setText(_translate("MainWindow", "Amine"))
        self.timestamps.setText(_translate("MainWindow", "timestamps"))

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.title2 = self.ui.title2
        self.title2.setText("Face Recognition System")

        self.title = self.ui.title
        self.title.setText("")
        self.title.setPixmap(QPixmap("./icon/logo.png"))
        self.title.setScaledContents(True)

        self.side_menu = self.ui.listWidget
        self.side_menu.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.side_menu_icon = self.ui.listWidget_icon
        self.side_menu_icon.setFocusPolicy(Qt.FocusPolicy.NoFocus)

        self.menu_btn = self.ui.pushButton
        self.menu_btn.setObjectName("menu_btn")
        self.menu_btn.setText("")
        self.menu_btn.setIcon(QIcon("./icon/close.png"))
        self.menu_btn.setIconSize(QSize(30,30))
        self.menu_btn.setCheckable(True)
        self.menu_btn.setChecked(True)


        self.side_menu.setHidden(True)
        self.title2.setHidden(True)
        self.title.setHidden(True)
        self.side_menu_icon.setVisible(True)

        # self.side_menu_layout.setContentsMargins(0, 0, 0, 0)
        # self.side_menu_layout.setSpacing(0)

        # self.parent_layout.setContentsMargins(0, 0, 0, 0)

        self.setContentsMargins(0, 0, 0, 0)




        # self.side_menu.setMaximumWidth(200)  # Define the width when visible
        # self.side_menu.setHidden(True)      # Initially hide the sidebar
        # self.side_menu_icon.setMaximumWidth(50)  # Define the width for the icon-only menu



        self.main_content = self.ui.stackedWidget

        self.menu_list = [
            {
                "name":"Dashboard",
                "icon":"./icon/dashboard.png"
            },
                        {
                "name":"Manage Users",
                "icon":"./icon/group.png"
            },
                        {
                "name":"Logs",
                "icon":"./icon/log.png"
            },
                        {
                "name":"Departements",
                "icon":"./icon/department.png"
            },
                        {
                "name":"Admins",
                "icon":"./icon/user.png"
            },
                        {
                "name":"Settings",
                "icon":"./icon/setting.png"
            },
        ]

        self.init_list_widget()
        self.init_signal_slot()
        # self.init_stackwidget()

        self.side_menu.setMaximumWidth(0)
        self.side_menu_icon.setMaximumWidth(60)  # Show icon-only menu




    def init_signal_slot(self):
        self.menu_btn.toggled["bool"].connect(self.side_menu.setHidden)
        self.menu_btn.toggled["bool"].connect(self.title2.setHidden)
        self.menu_btn.toggled["bool"].connect(self.title.setHidden)
        self.menu_btn.toggled["bool"].connect(self.side_menu_icon.setVisible)

        # self.side_menu.currentRowChanged["int"].connect(self.main_content.setCurrentIndex)
        # self.side_menu_icon.currentRowChanged["int"].connect(self.main_content.setCurrentIndex)
        # self.side_menu.currentRowChanged["int"].connect(self.side_menu_icon.setCurrentIndex)
        # self.side_menu_icon.currentRowChanged["int"].connect(self.side_menu.setCurrentRow)

        self.side_menu.currentRowChanged.connect(self.main_content.setCurrentIndex)
        self.side_menu_icon.currentRowChanged.connect(self.main_content.setCurrentIndex)
        self.side_menu.currentRowChanged.connect(self.side_menu_icon.setCurrentRow)
        self.side_menu_icon.currentRowChanged.connect(self.side_menu.setCurrentRow)



        self.menu_btn.toggled.connect(self.button_icon_change)


    def animate_sidebar(self, expand):
        if expand:  # Expand the sidebar
            self.animation = QPropertyAnimation(self.side_menu, b"maximumWidth")
            self.animation.setDuration(300)  # Animation duration in milliseconds
            self.animation.setStartValue(0)
            self.animation.setEndValue(250)  # Full sidebar width
            self.animation.start()

            self.icon_animation = QPropertyAnimation(self.side_menu_icon, b"maximumWidth")
            self.icon_animation.setDuration(300)
            self.icon_animation.setStartValue(50)
            self.icon_animation.setEndValue(0) # Hide icon-only menu
            self.icon_animation.start()
        else:  # Collapse the sidebar
            self.animation = QPropertyAnimation(self.side_menu, b"maximumWidth")
            self.animation.setDuration(300)
            self.animation.setStartValue(250)
            self.animation.setEndValue(0)  # Collapse sidebar
            self.animation.start()

            self.icon_animation = QPropertyAnimation(self.side_menu_icon, b"maximumWidth")
            self.icon_animation.setDuration(300)
            self.icon_animation.setStartValue(0)
            self.icon_animation.setEndValue(50)  # Show icon-only menu
            self.icon_animation.start()


    def button_icon_change(self, status):
            if status:  # Sidebar closed
                self.menu_btn.setIcon(QIcon("./icon/open.png"))
                self.animate_sidebar(False)  # Collapse sidebar
            else:  # Sidebar opened
                self.menu_btn.setIcon(QIcon("./icon/close.png"))
                self.animate_sidebar(True)  # Expand sidebar


        
    def init_list_widget(self):
        self.side_menu.clear()
        self.side_menu_icon.clear()

        for menu in self.menu_list:
            item = QListWidgetItem()
            item.setIcon(QIcon(menu.get("icon")))
            item.setSizeHint(QSize(40,40))
            self.side_menu_icon.addItem(item)
            self.side_menu_icon.setCurrentRow(0)

            item_new = QListWidgetItem()
            item_new.setIcon(QIcon(menu.get("icon")))
            item_new.setText(menu.get("name"))
            self.side_menu.addItem(item_new)
            self.side_menu.setCurrentRow

    def init_stackwidget(self):
        widget_list = self.main_content.findChildren(QWidget)
        for widget in widget_list:
            self.main_content.removeWidget(widget)

        for menu in self.menu_list:
            text = menu.get("name")
            layout = QGridLayout()
            label = QLabel(text=text)
            label.setAlignment(Qt.AlignmentFlag.AlignCenter)
            font = QFont()
            font.setPixelSize(20)
            label.setFont(font)
            layout.addWidget(label)
            new_page = QWidget()
            new_page.setLayout(layout)
            self.main_content.addWidget(new_page)

if __name__ == "__main__":
    app = QApplication(sys.argv)

    with open("style.qss") as f:
        style_str = f.read()

    app.setStyleSheet(style_str)
    window = MainWindow()
    window.show()

    sys.exit(app.exec())